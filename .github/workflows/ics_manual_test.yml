name: ICS Manual Test (Bypass Hash)

on:
  workflow_dispatch:
    inputs:
      enrich_titles:
        description: 'Fetch event page subtitle into title field'
        required: false
        default: 'true'
      enrich_raw_details:
        description: 'Capture rawEventDetails (HTML) from .events-detail-main'
        required: false
        default: 'true'

permissions:
  contents: write

jobs:
  manual-test:
    runs-on: ubuntu-latest
    env:
      ICS_URL: ${{ vars.ICS_URL }}
      REPO_VARIABLE: ${{ vars.REPO_VARIABLE }}
      FALLBACK_PREPEND_TEXT: ${{ vars.FALLBACK_PREPEND_TEXT }}
      ENRICH_TITLES: ${{ github.event.inputs.enrich_titles }}
      ENRICH_RAW_DETAILS_INPUT: ${{ github.event.inputs.enrich_raw_details }}
      ENRICH_RAW_DETAILS: ${{ vars.ENRICH_RAW_DETAILS }}
      ENRICH_RAW_DETAILS_OVERWRITE: ${{ vars.ENRICH_RAW_DETAILS_OVERWRITE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Python setup
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: pytest -q
      - name: Generate (force bypass)
        run: |
          set -euo pipefail
          : "${OUTPUT_FILE:=events.json}"; echo "OUTPUT_FILE=$OUTPUT_FILE"
          if [ -z "${ICS_URL}" ]; then echo "ICS_URL not set" >&2; exit 1; fi
          ENRICH_FLAG=""; if [ "${ENRICH_TITLES}" = "true" ]; then ENRICH_FLAG="--enrich-titles"; fi
          RAW_FLAGS=""
          # Input takes precedence; fall back to repo variable if input is empty
          if [ "${ENRICH_RAW_DETAILS_INPUT}" = "true" ] || { [ -z "${ENRICH_RAW_DETAILS_INPUT}" ] && { [ "${ENRICH_RAW_DETAILS}" = "true" ] || [ "${ENRICH_RAW_DETAILS}" = "1" ]; }; }; then
            RAW_FLAGS+=" --enrich-raw-details"
          fi
          if [ "${ENRICH_RAW_DETAILS_OVERWRITE}" = "true" ] || [ "${ENRICH_RAW_DETAILS_OVERWRITE}" = "1" ]; then
            RAW_FLAGS+=" --enrich-raw-details-overwrite"
          fi
          python -m src.main --ics-url "${ICS_URL}" --repo-variable "${REPO_VARIABLE}" --output "${OUTPUT_FILE}" ${ENRICH_FLAG} ${RAW_FLAGS}
      - name: Validate JSON against schema
        run: |
          set -euo pipefail
          : "${OUTPUT_FILE:=events.json}"
          python tools/validate_json.py --schema schema/events.schema.json --data "${OUTPUT_FILE}"
      - name: Publish transient release (manual-latest)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          : "${OUTPUT_FILE:=events.json}"
          TAG=manual-latest
          if gh release view "$TAG" >/dev/null 2>&1; then gh release delete "$TAG" -y || true; fi
          gh release create "$TAG" "$OUTPUT_FILE" --title "Manual test latest" --notes "Manual test run $(date -u)" --latest=false
          echo "Manual test asset: https://github.com/${GITHUB_REPOSITORY}/releases/tag/$TAG" >> $GITHUB_STEP_SUMMARY
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: manual-events-json
          path: events.json