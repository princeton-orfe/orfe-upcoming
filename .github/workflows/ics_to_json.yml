name: ICS to JSON
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      # Repository variables (set in Settings > Variables > Repository variables)
      ICS_URL: ${{ vars.ICS_URL }}
      REPO_VARIABLE: ${{ vars.REPO_VARIABLE }}
      OUTPUT_FILE: ${{ vars.OUTPUT_FILE }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: pytest -q
      - name: Generate JSON
        run: |
          set -euo pipefail
          echo "ICS_URL=${ICS_URL}"
          : "${OUTPUT_FILE:=events.json}"  # default if unset/empty
          echo "OUTPUT_FILE=${OUTPUT_FILE}"
          if [ -z "${ICS_URL}" ]; then
            echo "ICS_URL is empty. Define repository variable 'ICS_URL'." >&2
            exit 1
          fi

          python -m src.main --ics-url "${ICS_URL}" --repo-variable "${REPO_VARIABLE}" --output "${OUTPUT_FILE}" 
      - name: Commit JSON to main (stable URL)
        run: |
          set -euo pipefail
          : "${OUTPUT_FILE:=events.json}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if git diff --quiet -- "${OUTPUT_FILE}" 2>/dev/null; then
            echo "No changes in ${OUTPUT_FILE}";
          else
            git add "${OUTPUT_FILE}"
            git commit -m "chore(data): update ${OUTPUT_FILE} [skip ci]" || echo "Nothing to commit"
            git push origin HEAD:main
          fi
          echo "Stable raw URL: https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/main/${OUTPUT_FILE}" >> $GITHUB_STEP_SUMMARY
      - name: Upload JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: events-json
          path: ${{ env.OUTPUT_FILE || 'events.json' }}
